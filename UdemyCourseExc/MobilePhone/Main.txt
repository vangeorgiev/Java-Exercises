import java.util.ArrayList;
import java.util.Collection;
import java.util.Scanner;

public class Main {
    static Scanner scanner = new Scanner(System.in);
    static MobilePhone iphone = new MobilePhone("0883395676");

    public static void main(String[] args) {
        printIntro();
        boolean quit = false;
        while (!quit) {

            int action = scanner.nextInt();
            scanner.nextLine();
            switch (action) {
                case 1:
                    printIntro();
                    break;
                case 2:
                    createContact();
                    break;
                case 3:
                    deleteContact();
                    break;
                case 4:
                    updateContact();
                    break;
                case 5:
                    printContacts();
                    break;
                case 6:
                    findContact();
                    break;
                case 7:
                    quit = true;
                    break;
                default:
                    System.out.println("wrong number");
                    break;
            }
        }


    }

    public static void updateContact() {
        System.out.println("Enter the name of contact you want to update: ");
        String name = scanner.nextLine();
        Contact existingContact = iphone.query(name);
        if (existingContact != null) {
            System.out.println("Add the name and phone number: ");
            String newName = scanner.nextLine();
            String newPhoneNumber = scanner.nextLine();
            Contact newContact = new Contact(newName, newPhoneNumber);
            iphone.updateExistingContact(existingContact, newContact);
        } else {
            System.out.println("Didnt find contact with name: " + name);
        }

    }

    public static void createContact() {
        System.out.println("Enter contact name: ");
        String lqlql = scanner.nextLine();
        System.out.println("Enter phone number: ");
        String asd = scanner.nextLine();
        Contact newContact = new Contact(lqlql, asd);
        iphone.addNewContact(newContact);
    }

    public static void deleteContact() {
        System.out.println("Enter the name of contact you want to delete: ");
        String name = scanner.nextLine();
        if (iphone.findContact(iphone.query(name)) >= 0) {
            iphone.removeExistingContact(iphone.query(name));
        } else {
            System.out.println("Could find contact with " + name + " name");
        }
    }

    public static void printContacts() {
        iphone.printContacts();
    }

    public static void findContact() {
        System.out.println("Enter existing contact name: ");
        String name = scanner.nextLine();
        if (iphone.findContact(iphone.query(name)) >= 0) {
            System.out.println(name + " phone number is " + iphone.myContacts.get(iphone.findContact(iphone.query(name))).getPhoneNumber());
        } else {
            System.out.println("Could find contact with " + name + " name");
        }


    }

    public static void printIntro() {
        System.out.println("MOBILE PHONE starting...");
        System.out.println("- 1: Show options again");
        System.out.println("- 2: Create Contact");
        System.out.println("- 3: Delete Contact");
        System.out.println("- 4: Update Contact");
        System.out.println("- 5: Print Contacts");
        System.out.println("- 6: Find Contact");
        System.out.println("- 7: Quit");

    }
}